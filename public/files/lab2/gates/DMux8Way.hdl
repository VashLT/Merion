/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
        // fase 1: outputs like: {0, in, 0, in, 0, in, 0, in}
        DMux(in=in, sel=sel[0], a=aSemiOut, b=bSemiOut);
        DMux(in=in, sel=sel[0], a=eSemiOut, b=fSemiOut);

        // fase 2: outputs like: {0, in, 0, 0, 0, in, 0, 0}
        DMux(in=bSemiOut, sel=sel[1], a=bOut, b=dOut);
        DMux(in=aSemiOut, sel=sel[1], a=aOut, b=cOut);
        DMux(in=fSemiOut, sel=sel[1], a=fOut, b=hOut);
        DMux(in=eSemiOut, sel=sel[1], a=eOut, b=gOut);

        // fase 3: outputs like: {0, in, 0, 0, 0, 0, 0, 0}
        DMux(in=bOut, sel=sel[2], a=b, b=f);
        DMux(in=aOut, sel=sel[2], a=a, b=e);
        DMux(in=cOut, sel=sel[2], a=c, b=g);
        DMux(in=dOut, sel=sel[2], a=d, b=h);
}   